/*
* Copyright (c) 2019. TU Dortmund University,
* Institute of Energy Systems, Energy Efficiency and Energy Economics,
* Research group Distribution grid planning and operation
*/

plugins {
    id "com.jfrog.artifactory" version "4.9.7"
    id 'java' // java support
    id 'groovy' // groovy support
    id 'com.github.spotbugs' version '2.0.0' //code check, working on byte code
    id 'com.diffplug.gradle.spotless' version '3.27.1'//code format
    id "org.sonarqube" version "2.8" // sonarqubeÂ´
    id 'pmd' // code check, working on source code
    id 'jacoco' // java code coverage plugin
    id 'maven-publish' // publish to a maven repo (local or mvn central, has to be defined)
}

ext {
    javaVersion = JavaVersion.VERSION_11
    scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator //location of script plugins
}

apply from: scriptsLocation + 'pmd.gradle'
apply from: scriptsLocation + 'spotbugs.gradle'
apply from: scriptsLocation + 'sonarqube.gradle' // sonarqube config
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'tests.gradle' // tasks for tests
apply from: scriptsLocation + 'checkJavaVersion.gradle'
apply from: scriptsLocation + 'jacoco.gradle' // jacoco java code coverage

repositories {
    jcenter()
}


dependencies {

    compile group: 'commons-io', name: 'commons-io', version: '2.6' // apache commons io
    compile 'com.google.code.gson:gson:2.8.6' // java serialization, POJOs -> JSON

    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy-all:2.5.8'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'junit:junit:4.12'

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:+'
    implementation 'org.jetbrains:annotations:15.0'// find bugs in java programs

}

wrapper {
    gradleVersion = '6.0.1'
}

group = 'edu.ie3.vis'
version = '0.1-SNAPSHOT'
description = 'java-apexcharts'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion



task sourcesJar(type: Jar) {
    getArchiveClassifier().set('sources')
    from(sourceSets.main.allSource)
}

task javadocJar(type: Jar) {
    getArchiveClassifier().set('javadoc')
    from(javadoc.destinationDir)
}

if (project.hasProperty('user') && project.hasProperty('password')) {
    artifactory {
        contextUrl = "https://simona.ie3.e-technik.tu-dortmund.de/artifactory"
        publish {
            repository {
                repoKey = 'libs-snapshot-local'
                username = project.getProperty('user')
                password = project.getProperty('password')
                maven = true
            }
            defaults {
                publications('mavenJava')
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'java-apexcharts'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}
